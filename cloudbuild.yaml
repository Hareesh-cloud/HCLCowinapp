steps:
# Pull the existing image
 - name: 'gcr.io/cloud-builders/docker'
   id: Pull image
   entrypoint: 'bash'
   args:
    - '-c'
    - |
      docker pull gcr.io/$PROJECT_ID/tomcat:latest || exit 0
# Build a docker image
 - name: 'gcr.io/cloud-builders/docker'
   id: Build image
   args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/tomcat', '--cache-from', 'gcr.io/$PROJECT_ID/tomcat', '.' ]
# Push the docker image to container registry
 - name: 'gcr.io/cloud-builders/docker'
   id: push image to container registry
   args: ["push", "gcr.io/$PROJECT_ID/tomcat"]
# This step deploys your image in kubernetes cluster specfied in below env
 - name: 'gcr.io/cloud-builders/kubectl'
   id: GKE Deploy
   args:
   - 'apply'
   - '-f'
   - 'deploy.yaml'
   env:
   - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
   - 'CLOUDSDK_CONTAINER_CLUSTER=gcpcluster'
# This steps service your image in kubernetes cluster specfied in below env
 - name: 'gcr.io/cloud-builders/kubectl'
   id: service expose
   args:
   - 'apply'
   - '-f'
   - 'service.yaml'
   env:
   - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
   - 'CLOUDSDK_CONTAINER_CLUSTER=gcpcluster'   
# This steps storage your image in kubernetes cluster specfied in below env
 - name: 'gcr.io/cloud-builders/kubectl'
   id: Storage
   args:
   - 'apply'
   - '-f'
   - 'volume.yaml'
   env:
   - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
   - 'CLOUDSDK_CONTAINER_CLUSTER=gcpcluster'  
